---
import BaseHead from '../components/BaseHead.astro';
import Blog from './blog.svelte'
interface Frontmatter {
	frontmatter: {
		title: string
		description: string
		published: string
		id: string,
		outdated: boolean,
		lastupdated: string,
		tags: string[]
	}
}
// Use Astro.glob() to fetch all posts, and then sort them by date.
const posts = (await Astro.glob<Frontmatter>('./blog/*.{md,mdx}')).sort(
	(a, b) => new Date(b.frontmatter.published).valueOf() - new Date(a.frontmatter.published).valueOf()
);
---
<!DOCTYPE html>
<html lang="en">
<head>
	<BaseHead title="Blog List @ Nat3z" description="The list of blogs posted by @Nat3z" />
</head>
<body>
	<main>
		<Blog client:load>
			{posts.map(post => 
				<a href={`/blog/${post.frontmatter.id}`}>
					<section class="bg-oxford-blue rounded-lg w-9/12 sm:w-96 m-auto flex-col relative mb-2">
						{ post.frontmatter.outdated && 
							<div class="rounded-t-lg flex flex-row gap-2 justify-center items-center p-2 absolute right-4 top-3">
								<span class="material-symbols-outlined text-red-500">
									error
								</span>
							</div>}
						<div class="p-4">
							<h1 class="font-raleway font-extrabold text-middle-blue text-2xl">{post.frontmatter.title}</h1>
							<h2 class="text-pacific-blue">{post.frontmatter.description}</h2>
						</div>
						<div class="bg-light-oxford-blue rounded-b-lg flex flex-row gap-2 justify-center items-center p-4">
							<p class="text-pacific-blue font-raleway text-sm">Published: {post.frontmatter.published}</p>
							<div class="flex-row flex-wrap gap-2 ml-auto">
								{ post.frontmatter.tags && post.frontmatter.tags.map(tag => 
									<p class="text-pacific-blue font-raleway bg-oxford-blue pl-2 pr-2 rounded-sm text-sm">#{tag}</p>
								)}
							</div>

						</div>
					</section>
				</a>
			)}
		</Blog>

	</main>
</body>
</html>